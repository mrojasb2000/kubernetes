apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    app: front
data:
  test: hola
  nginx: server {
    listen       8080;
    listen  [::]:8080;
    server_name  localhost;

    location / {
    root   /usr/share/nginx/html;
    index  index.html index.htm;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
    root   /usr/share/nginx/html;
    }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vars
  labels:
    app: front
data:
  db_host: dev.host.local
  db_user: dev.user
  script: |
    echo DB host  es $DB_HOST y DB user es $DB_USER > /usr/share/nginx/html/test.html
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubernetes.io/change-cause: "Nginx Configuration Mapping"
  name: nginx-deployment
  labels:
    app: front
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front
  template:
    metadata:
      labels:
        app: front
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          env:
            # Define the environment variable
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  # The ConfigMap containing the value you want to assign to SPECIAL_LEVEL_KEY
                  name: vars
                  # Specify the key associated with the value
                  key: db_host
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  # The ConfigMap containing the value you want to assign to SPECIAL_LEVEL_KEY
                  name: vars
                  # Specify the key associated with the value
                  key: db_user
          volumeMounts:
            - name: nginx-volume
              mountPath: /etc/nginx/conf.d/
            - name: script-volume
              mountPath: /opt/
      volumes:
        - name: nginx-volume
          configMap:
            name: nginx-config
            items:
              - key: nginx
                path: default.conf
        - name: script-volume
          configMap:
            name: vars
            items:
              - key: script
                path: script.sh
